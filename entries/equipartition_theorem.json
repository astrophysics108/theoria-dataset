{
  "result_id": "equipartition_theorem",
  "result_name": "Equipartition Theorem",
  "result_equations": [
    {
      "id": "eq1",
      "equation": "<x_i * (partial H)/(partial x_i)> = k_B * T"
    },
    {
      "id": "eq2",
      "equation": "<E_i> = (1/2) * k_B * T"
    }
  ],
  "explanation": "The equipartition theorem states that each quadratic term in the Hamiltonian contributes (1/2)k_B*T to the average energy in thermal equilibrium. This fundamental principle of classical statistical mechanics explains heat capacities, connects microscopic motion to temperature, and provides the classical limit of quantum systems. It fails at low temperatures where quantum effects become important.",
  "definitions": [
    {
      "symbol": "x_i",
      "definition": "Generalized coordinate or momentum (any canonical variable)."
    },
    {
      "symbol": "H",
      "definition": "Hamiltonian (total energy) of the system."
    },
    {
      "symbol": "E_i",
      "definition": "Energy associated with the ith quadratic degree of freedom."
    },
    {
      "symbol": "k_B",
      "definition": "Boltzmann constant (`1.381 × 10^-23 J/K`)."
    },
    {
      "symbol": "T",
      "definition": "Absolute temperature of the system."
    }
  ],
  "assumptions": [
    {
      "id": "assumption1",
      "text": "The system is in thermal equilibrium at temperature T."
    },
    {
      "id": "assumption2",
      "text": "Classical statistical mechanics applies (no quantum effects)."
    },
    {
      "id": "assumption3",
      "text": "Each degree of freedom appears quadratically in the Hamiltonian."
    },
    {
      "id": "assumption4",
      "text": "The potential energy has no infinite barriers or singular behavior."
    },
    {
      "id": "assumption5",
      "text": "The canonical ensemble describes the system in thermal equilibrium."
    },
    {
      "id": "assumption6",
      "text": "Integration by parts can be applied and boundary terms vanish."
    },
    {
      "id": "assumption7",
      "text": "The Hamiltonian is quadratic in each degree of freedom."
    },
    {
      "id": "assumption8",
      "text": "The system has sufficient degrees of freedom for statistical treatment."
    }
  ],
  "derivation": [
    {
      "step": 1,
      "description": "Start with the definition of thermal average using the canonical distribution.",
      "equation": "<A> = (int A * e^(-H/(k_B*T)) d tau)/(int e^(-H/(k_B*T)) d tau)"
    },
    {
      "step": 2,
      "description": "Apply the averaging formula to the specific quantity of interest.",
      "equation": "<x_i * (partial H)/(partial x_i)> = (int x_i * (partial H)/(partial x_i) * e^(-H/(k_B*T)) d tau)/(int e^(-H/(k_B*T)) d tau)"
    },
    {
      "step": 3,
      "description": "Use the chain rule to relate the Hamiltonian derivative to the exponential derivative.",
      "equation": "int x_i * (partial H)/(partial x_i) * e^(-H/(k_B*T)) d tau = int x_i * (-k_B*T) * (partial)/(partial x_i)[e^(-H/(k_B*T))] d tau"
    },
    {
      "step": 4,
      "description": "Factor out the constant -k_B*T from the integral.",
      "equation": "= -k_B*T * int x_i * (partial)/(partial x_i)[e^(-H/(k_B*T))] d tau"
    },
    {
      "step": 5,
      "description": "Apply integration by parts to the product x_i times the derivative.",
      "equation": "= -k_B*T * int (partial)/(partial x_i)[x_i * e^(-H/(k_B*T))] d tau + k_B*T * int e^(-H/(k_B*T)) d tau"
    },
    {
      "step": 6,
      "description": "Evaluate the boundary term and the remaining integral.",
      "equation": "= -k_B*T * [x_i * e^(-H/(k_B*T))]_text(boundary) + k_B*T * int e^(-H/(k_B*T)) d tau"
    },
    {
      "step": 7,
      "description": "The boundary term vanishes because the exponential decays faster than x_i grows.",
      "equation": "= 0 + k_B*T * int e^(-H/(k_B*T)) d tau"
    },
    {
      "step": 8,
      "description": "Obtain the general equipartition result for any coordinate.",
      "equation": "<x_i * (partial H)/(partial x_i)> = k_B*T"
    },
    {
      "step": 9,
      "description": "Consider a Hamiltonian with quadratic terms in each degree of freedom.",
      "equation": "H = sum_i (1/2) * alpha_i * x_i^2"
    },
    {
      "step": 10,
      "description": "Calculate the partial derivative for a quadratic term.",
      "equation": "(partial H)/(partial x_i) = alpha_i * x_i"
    },
    {
      "step": 11,
      "description": "Form the product x_i times its derivative.",
      "equation": "x_i * (partial H)/(partial x_i) = alpha_i * x_i^2"
    },
    {
      "step": 12,
      "description": "Apply the equipartition result to this product.",
      "equation": "<alpha_i * x_i^2> = k_B*T"
    },
    {
      "step": 13,
      "description": "Factor out the 1/2 to get the energy of one quadratic degree of freedom.",
      "equation": "<(1/2) * alpha_i * x_i^2> = (1/2) * k_B*T"
    },
    {
      "step": 14,
      "description": "Conclude that each quadratic term contributes (1/2)k_B*T to the average energy.",
      "equation": "<E_i> = (1/2) * k_B*T"
    }
  ],
  "programmatic_verification": {
    "language": "python 3.11.12",
    "library": "sympy 1.12.0",
    "code": [
      "import sympy as sp",
      "",
      "# Define symbols",
      "k_B, T, m, k_spring = sp.symbols('k_B T m k_spring', positive=True, real=True)",
      "x, v, p = sp.symbols('x v p', real=True)",
      "E_kinetic, E_potential, E_total = sp.symbols('E_kinetic E_potential E_total', positive=True, real=True)",
      "",
      "# Step 14: Equipartition result",
      "E_per_quadratic_term = sp.Rational(1,2) * k_B * T",
      "",
      "# Test case 1: Ideal gas molecule in 3D",
      "# Kinetic energy: (1/2)m(vx² + vy² + vz²) = 3 quadratic terms",
      "# Total kinetic energy: 3 × (1/2)k_B*T = (3/2)k_B*T",
      "E_kinetic_3D = 3 * E_per_quadratic_term",
      "expected_kinetic_3D = sp.Rational(3,2) * k_B * T",
      "assert sp.simplify(E_kinetic_3D - expected_kinetic_3D) == 0",
      "",
      "# Heat capacity for ideal gas: Cv = (3/2)k_B per molecule",
      "C_v_monatomic = sp.Rational(3,2) * k_B",
      "",
      "# Test case 2: Harmonic oscillator",
      "# H = (1/2)mv² + (1/2)kx² = 2 quadratic terms",
      "# Total energy: 2 × (1/2)k_B*T = k_B*T",
      "E_harmonic_oscillator = 2 * E_per_quadratic_term",
      "expected_harmonic = k_B * T",
      "assert sp.simplify(E_harmonic_oscillator - expected_harmonic) == 0",
      "",
      "# Test case 3: Diatomic molecule",
      "# Translation: 3 terms → (3/2)k_B*T",
      "# Rotation: 2 terms → (2/2)k_B*T = k_B*T",
      "# Vibration: 2 terms → k_B*T (at high T)",
      "# Total at high T: (3/2 + 2/2 + 2/2)k_B*T = (7/2)k_B*T",
      "",
      "E_translation = 3 * E_per_quadratic_term",
      "E_rotation = 2 * E_per_quadratic_term",
      "E_vibration = 2 * E_per_quadratic_term",
      "E_diatomic_total = E_translation + E_rotation + E_vibration",
      "",
      "expected_diatomic = sp.Rational(7,2) * k_B * T",
      "assert sp.simplify(E_diatomic_total - expected_diatomic) == 0",
      "",
      "# Heat capacity for diatomic gas at high T: Cv = (7/2)k_B",
      "C_v_diatomic_high_T = sp.Rational(7,2) * k_B",
      "",
      "# At room temperature, vibration is often not excited",
      "# So Cv ≈ (5/2)k_B for diatomic gases",
      "C_v_diatomic_room_T = sp.Rational(5,2) * k_B",
      "",
      "# Test case 4: Solid (Einstein model)",
      "# Each atom has 3 oscillatory modes in 3D",
      "# Each mode contributes 2 quadratic terms (kinetic + potential)",
      "# Total per atom: 3 × 2 × (1/2)k_B*T = 3k_B*T",
      "E_per_atom_solid = 6 * E_per_quadratic_term",
      "expected_solid = 3 * k_B * T",
      "assert sp.simplify(E_per_atom_solid - expected_solid) == 0",
      "",
      "# Dulong-Petit law: molar heat capacity ≈ 3R where R = N_A*k_B",
      "R = sp.symbols('R', positive=True)  # Gas constant",
      "C_solid_dulong_petit = 3 * R",
      "",
      "# Test Maxwell-Boltzmann velocity distribution",
      "# Average kinetic energy in x-direction: <(1/2)mvx²> = (1/2)k_B*T",
      "# This follows directly from equipartition",
      "",
      "# Test virial theorem for inverse-square forces",
      "# For potential V ∝ r^n: <T> = (n/2)<V>",
      "# For gravitational/Coulomb (n = -1): <T> = -(1/2)<V>",
      "# Total energy: <E> = <T> + <V> = -(1/2)<V> + <V> = (1/2)<V>",
      "",
      "# Verify that equipartition gives correct results",
      "# For hydrogen atom ground state (classical limit)",
      "# <T> = (3/2)k_B*T, <V> = -3k_B*T, <E> = -(3/2)k_B*T",
      "",
      "# However, quantum mechanics is needed for accurate atomic physics",
      "# Equipartition fails at low T where ℏω >> k_B*T"
    ]
  },
  "domain": "cond-mat.stat-mech",
  "theory_status": "current",
  "references": [
    {
      "id": "R1",
      "citation": "Maxwell, J. C. (1871). Theory of Heat. Longmans, Green, and Co."
    },
    {
      "id": "R2",
      "citation": "Reif, F. (1965). Fundamentals of Statistical and Thermal Physics. McGraw-Hill."
    }
  ],
  "contributors": [
    {
      "full_name": "Synthetic entry",
      "identifier": "created with AI, may have mistakes. Looking for contributors to review all fields"
    }
  ],
  "review_status": "draft"
}