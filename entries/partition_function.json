{
  "result_id": "partition_function",
  "result_name": "Partition Function (Canonical Ensemble)",
  "result_equations": [
    {
      "id": "eq1",
      "equation": "Z = sum_i exp(-E_i/(k_B T))"
    },
    {
      "id": "eq2",
      "equation": "F = -k_B T ln(Z)"
    }
  ],
  "explanation": "The partition function is the central quantity in statistical mechanics that connects microscopic energy states to macroscopic thermodynamic properties. It represents the sum over all possible energy states weighted by their Boltzmann factors. All thermodynamic quantities can be derived from the partition function.",
  "definitions": [
    {
      "symbol": "Z",
      "definition": "Partition function (dimensionless)."
    },
    {
      "symbol": "E_i",
      "definition": "Energy of the ith microstate."
    },
    {
      "symbol": "k_B",
      "definition": "Boltzmann constant."
    },
    {
      "symbol": "T",
      "definition": "Absolute temperature."
    },
    {
      "symbol": "F",
      "definition": "Helmholtz free energy."
    }
  ],
  "assumptions": [
    {
      "id": "assumption1",
      "text": "The system is in thermal equilibrium with a heat reservoir at temperature T."
    },
    {
      "id": "assumption2",
      "text": "The number of particles is fixed (canonical ensemble)."
    },
    {
      "id": "assumption3",
      "text": "Boltzmann distribution applies to the probability of each microstate."
    },
    {
      "id": "assumption4",
      "text": "Classical thermodynamic relations hold for ensemble averages."
    }
  ],
  "derivation": [
    {
      "step": 1,
      "equation": "P_i = exp(-E_i/(k_B T))/Z"
    },
    {
      "step": 2,
      "equation": "sum_i P_i = 1"
    },
    {
      "step": 3,
      "equation": "sum_i exp(-E_i/(k_B T))/Z = 1"
    },
    {
      "step": 4,
      "equation": "Z = sum_i exp(-E_i/(k_B T))"
    },
    {
      "step": 5,
      "equation": "S = k_B sum_i P_i ln(1/P_i)"
    },
    {
      "step": 6,
      "equation": "U = sum_i P_i E_i"
    },
    {
      "step": 7,
      "equation": "F = U - T S"
    },
    {
      "step": 8,
      "equation": "F = -k_B T ln(Z)"
    }
  ],
  "derivation_explanation": [
    {
      "step": 1,
      "text": "The probability of finding the system in state i follows the Boltzmann distribution."
    },
    {
      "step": 2,
      "text": "The sum of all probabilities must equal unity (normalization condition)."
    },
    {
      "step": 3,
      "text": "Substitute the Boltzmann distribution into the normalization condition."
    },
    {
      "step": 4,
      "text": "Solve for the partition function Z as the normalization constant."
    },
    {
      "step": 5,
      "text": "Define entropy using the statistical definition in terms of probabilities."
    },
    {
      "step": 6,
      "text": "Define internal energy as the ensemble average of energy."
    },
    {
      "step": 7,
      "text": "Use the thermodynamic definition of Helmholtz free energy."
    },
    {
      "step": 8,
      "text": "Show that free energy is related to the logarithm of the partition function."
    }
  ],
  "programmatic_verification": {
    "language": "python 3.11.12",
    "library": "sympy 1.12.0",
    "code": [
      "import sympy as sp",
      "# Define symbols",
      "k_B, T, E1, E2, E3 = sp.symbols('k_B T E1 E2 E3', positive=True)",
      "# Example: three-level system",
      "Z = sp.exp(-E1/(k_B*T)) + sp.exp(-E2/(k_B*T)) + sp.exp(-E3/(k_B*T))",
      "# Probabilities",
      "P1 = sp.exp(-E1/(k_B*T))/Z",
      "P2 = sp.exp(-E2/(k_B*T))/Z",
      "P3 = sp.exp(-E3/(k_B*T))/Z",
      "# Verify normalization",
      "total_prob = P1 + P2 + P3",
      "assert sp.simplify(total_prob) == 1",
      "# Average energy",
      "U = P1*E1 + P2*E2 + P3*E3",
      "# Verify U = -dln(Z)/d(beta) where beta = 1/(k_B*T)",
      "# Using chain rule: dln(Z)/d(beta) = dln(Z)/dT * dT/d(beta)",
      "# Since beta = 1/(k_B*T), we have d(beta)/dT = -1/(k_B*T²)",
      "# So dT/d(beta) = -k_B*T²",
      "dlogZ_dT = sp.diff(sp.log(Z), T)",
      "U_from_Z = -dlogZ_dT * (-k_B*T**2)  # U = -dln(Z)/d(beta)",
      "U_from_Z_simplified = sp.simplify(U_from_Z)",
      "assert sp.simplify(U - U_from_Z_simplified) == 0",
      "# Helmholtz free energy",
      "F = -k_B*T*sp.log(Z)",
      "# Verify that U = F - T*dF/dT",
      "U_from_F = F - T*sp.diff(F, T)",
      "assert sp.simplify(U - U_from_F) == 0"
    ]
  },
  "domain": "cond-mat.stat-mech",
  "theory_status": "current",
  "validity_regime": {
    "conditions": [
      "Thermal equilibrium",
      "Fixed number of particles",
      "Well-defined energy levels",
      "Classical or quantum statistical mechanics"
    ],
    "limitations": [
      "Assumes thermal equilibrium",
      "May be difficult to calculate for complex systems",
      "Requires knowledge of all energy states",
      "Classical limit needed for some applications"
    ]
  },
  "historical_context": {
    "importance": "Central concept in statistical mechanics, bridges microscopic and macroscopic physics",
    "development_period": "1870-1900",
    "key_insights": [
      "Statistical interpretation of thermodynamics",
      "Connection between entropy and probability",
      "Foundation for ensemble theory"
    ]
  },
  "references": [
    {
      "id": "R1",
      "citation": "Gibbs, J. W. (1902). *Elementary Principles in Statistical Mechanics*. Yale University Press."
    },
    {
      "id": "R2",
      "citation": "Pathria, R. K., & Beale, P. D. (2011). *Statistical Mechanics* (3rd ed.). Academic Press."
    }
  ],
  "dependencies": [
    "boltzmann_distribution",
    "first_law_thermodynamics"
  ],
  "contributors": [
    {
      "full_name": "Synthetic entry",
      "identifier": "AI created. May have mistakes, looking for contributors to this entry."
    }
  ],
  "review_status": "draft"
}