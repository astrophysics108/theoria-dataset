{
  "result_id": "special_relativity",
  "result_name": "Special Theory of Relativity",
  "result_equations": [
    {
      "id": "lorentz_time",
      "equation": "t' = gamma*(t - (v/c^2)*x)"
    },
    {
      "id": "lorentz_space",
      "equation": "x' = gamma*(x - v*t)"
    },
    {
      "id": "lorentz_y",
      "equation": "y' = y"
    },
    {
      "id": "lorentz_z",
      "equation": "z' = z"
    },
    {
      "id": "lorentz_factor",
      "equation": "gamma = 1/sqrt(1 - (v^2/c^2))"
    },
    {
      "id": "relativistic_energy",
      "equation": "E = gamma*m*c^2"
    },
    {
      "id": "relativistic_momentum",
      "equation": "vec p = gamma*m*vec v"
    },
    {
      "id": "energy_momentum_relation",
      "equation": "E^2 = (p*c)^2 + (m*c^2)^2"
    },
    {
      "id": "rest_energy",
      "equation": "E_0 = m*c^2"
    }
  ],
  "explanation": "Einstein's special theory of relativity revolutionized our understanding of space, time, mass, and energy. Built on two postulates - the relativity principle and the constancy of light speed - it derives the Lorentz transformations that describe how space and time coordinates change between inertial frames. The theory unifies space and time into spacetime, introduces time dilation and length contraction, establishes the relativistic energy-momentum relations, and reveals the famous mass-energy equivalence E = mc². These transformations ensure the invariance of the speed of light and the spacetime interval, forming the foundation of modern physics.",
  "equations_assumptions": [
    {
      "id": "eq_assump1",
      "text": "The principle of relativity: the laws of physics are the same in all inertial reference frames."
    },
    {
      "id": "eq_assump2",
      "text": "The speed of light in vacuum is constant and independent of the motion of the source or observer."
    },
    {
      "id": "eq_assump3",
      "text": "Spacetime is flat (no gravitational effects considered)."
    },
    {
      "id": "eq_assump4",
      "text": "Reference frames move with constant relative velocity (no acceleration)."
    }
  ],
  "definitions": [
    {
      "symbol": "t",
      "definition": "Time coordinate in the stationary frame (S)."
    },
    {
      "symbol": "t'",
      "definition": "Time coordinate in the moving frame (S')."
    },
    {
      "symbol": "x",
      "definition": "Spatial coordinate in the stationary frame (S) along the x-axis."
    },
    {
      "symbol": "x'",
      "definition": "Spatial coordinate in the moving frame (S') along the x-axis."
    },
    {
      "symbol": "y",
      "definition": "Spatial coordinate perpendicular to relative motion (unchanged)."
    },
    {
      "symbol": "z",
      "definition": "Spatial coordinate perpendicular to relative motion (unchanged)."
    },
    {
      "symbol": "v",
      "definition": "Relative velocity between the two frames (along the x-axis)."
    },
    {
      "symbol": "c",
      "definition": "Speed of light in vacuum."
    },
    {
      "symbol": "gamma",
      "definition": "Lorentz factor, defined as 1/sqrt(1-(v^2/c^2))."
    },
    {
      "symbol": "E",
      "definition": "Relativistic energy of a particle."
    },
    {
      "symbol": "vec p",
      "definition": "Relativistic momentum vector."
    },
    {
      "symbol": "m",
      "definition": "Rest mass (invariant mass) of the particle."
    },
    {
      "symbol": "E_0",
      "definition": "Rest energy of the particle (E_0 = mc^2)."
    }
  ],
  "derivation": [
    {
      "step": 1,
      "equation": "x' = A*x + B*t; t' = D*x + E*t"
    },
    {
      "step": 2,
      "equation": "0 = A*v*t + B*t"
    },
    {
      "step": 3,
      "equation": "B = -A*v"
    },
    {
      "step": 4,
      "equation": "(c - v)*A = (D*c + E)*c"
    },
    {
      "step": 5,
      "equation": "(-c - v)*A = (D*c - E)*c"
    },
    {
      "step": 6,
      "equation": "E = A"
    },
    {
      "step": 7,
      "equation": "D = -A*v/c^2"
    },
    {
      "step": 8,
      "equation": "x' = A*(x - v*t); t' = A*(t - v/c^2*x)"
    },
    {
      "step": 9,
      "equation": "x'^2 - c^2*t'^2 = A^2*(x-v*t)^2-c^2*A^2*(t-v/c^2*x)^2 = A^2*(x^2 - 2*v*t*x + v^2*t^2 - c^2*t^2 + 2*v*x*t - v^2/c^2*x^2) = A^2*(1 - v^2/c^2)*(x^2 - c^2*t^2)"
    },
    {
      "step": 10,
      "equation": "A^2*(1 - v^2/c^2) = 1"
    },
    {
      "step": 11,
      "equation": "A = 1/sqrt(1 - v^2/c^2)"
    },
    {
      "step": 12,
      "equation": "x' = gamma*(x - v*t); t' = gamma*(t - v/c^2*x); gamma = 1/sqrt(1 - v^2/c^2)"
    },
    {
      "step": 13,
      "equation": "Delta t' = gamma*Delta t"
    },
    {
      "step": 14,
      "equation": "Delta x' = (Delta x)/(gamma)"
    },
    {
      "step": 15,
      "equation": "vec F = (d vec p)/(dt)"
    },
    {
      "step": 16,
      "equation": "vec p = gamma*m*vec v"
    },
    {
      "step": 17,
      "equation": "E = int vec F * d vec r = int (d vec p)/(dt) * vec v * dt"
    },
    {
      "step": 18,
      "equation": "E = int vec F * vec v * dt = int (d vec p/dt) * vec v * dt = int vec v * d vec p"
    },
    {
      "step": 19,
      "equation": "E = int vec v * d(gamma*m*vec v) = m*int vec v * d(gamma*vec v)"
    },
    {
      "step": 20,
      "equation": "d(gamma*vec v) = d gamma * vec v + gamma * d vec v"
    },
    {
      "step": 21,
      "equation": "E = m*int vec v * (d gamma * vec v + gamma * d vec v) = m*int (vec v^2 * d gamma + gamma * vec v * d vec v)"
    },
    {
      "step": 22,
      "equation": "d gamma = d(1/sqrt(1 - v^2/c^2)) = (gamma^3 * v * dv)/c^2"
    },
    {
      "step": 23,
      "equation": "E = m*int (v^2 * (gamma^3 * v * dv)/c^2 + gamma * v * dv)"
    },
    {
      "step": 24,
      "equation": "E = m*int v*dv * gamma * (v^2*gamma^2/c^2 + 1)"
    },
    {
      "step": 25,
      "equation": "v^2*gamma^2/c^2 + 1 = v^2/(c^2*(1-v^2/c^2)) + 1 = (v^2 + c^2 - v^2)/(c^2*(1-v^2/c^2)) = c^2/(c^2*(1-v^2/c^2)) = gamma^2"
    },
    {
      "step": 26,
      "equation": "E = m*int v*gamma^3*dv = m*c^2*int (v/c^2)*gamma^3*dv = m*c^2*int d gamma"
    },
    {
      "step": 27,
      "equation": "E = m*c^2 * (gamma - 1)|_1^gamma = m*c^2 * (gamma - 1)"
    },
    {
      "step": 28,
      "equation": "E = E_k + E_0 = m*c^2*(gamma - 1) + m*c^2"
    },
    {
      "step": 29,
      "equation": "E = gamma*m*c^2"
    },
    {
      "step": 30,
      "equation": "E_0 = m*c^2"
    },
    {
      "step": 31,
      "equation": "E = gamma*m*c^2, p = gamma*m*v"
    },
    {
      "step": 32,
      "equation": "E^2 = (gamma*m*c^2)^2 = gamma^2*m^2*c^4"
    },
    {
      "step": 33,
      "equation": "(p*c)^2 = (gamma*m*v*c)^2 = gamma^2*m^2*v^2*c^2"
    },
    {
      "step": 34,
      "equation": "E^2 - (p*c)^2 = gamma^2*m^2*c^4 - gamma^2*m^2*v^2*c^2"
    },
    {
      "step": 35,
      "equation": "E^2 - (p*c)^2 = gamma^2*m^2*c^2*(c^2 - v^2)"
    },
    {
      "step": 36,
      "equation": "gamma^2*(c^2 - v^2) = (c^2 - v^2)/(1 - v^2/c^2) = c^2"
    },
    {
      "step": 37,
      "equation": "E^2 - (p*c)^2 = m^2*c^4 = (m*c^2)^2"
    }
  ],
  "derivation_assumptions": [
    {
      "id": "assumption1",
      "text": "Linearity: the transformation (x,t) → (x',t') is linear owing to homogeneity of space‑time."
    },
    {
      "id": "assumption2",
      "text": "Light‑speed invariance: a ray with x = ±c·t in S satisfies x' = ±c·t' in S'."
    },
    {
      "id": "assumption3",
      "text": "Frame setup: S' moves with velocity v along the common x-axis and origins coincide at t = t' = 0."
    },
    {
      "id": "assumption4",
      "text": "The spacetime interval is invariant under coordinate transformations."
    },
    {
      "id": "assumption5",
      "text": "Energy and momentum conservation hold in relativistic mechanics."
    }
  ],
  "derivation_explanation": [
    {
      "step": 1,
      "text": "Postulate the most general linear transformation between coordinates in two inertial frames."
    },
    {
      "step": 2,
      "text": "Impose that the spatial origin of S' (x' = 0) moves as x = v·t in S."
    },
    {
      "step": 3,
      "text": "Get the relationship between coefficients A and B."
    },
    {
      "step": 4,
      "text": "Demand that any right light x=+c*t in S also satisfies x'=+c*t' in S' substituting in equations from step1. Use step3."
    },
    {
      "step": 5,
      "text": "Repeat for a left-moving pulse (x=-c*t in S and x'=-c*t' in S') to get a second constraint."
    },
    {
      "step": 6,
      "text": "Subtracting equation in step 4 from the one in step 5 gives a relationship between A and E."
    },
    {
      "step": 7,
      "text": "Adding equations in step 4 and step 5 gives a relationship between A and D."
    },
    {
      "step": 8,
      "text": "Substitute E = A, B = -A*v, and D = -A*v/c^2 into the equations from step 1."
    },
    {
      "step": 9,
      "text": "Demand invariance of the spacetime interval: x'^2 - c^2*t'^2 = x^2 - c^2*t^2."
    },
    {
      "step": 10,
      "text": "Collect terms to obtain A²(1 - v²/c²) = 1."
    },
    {
      "step": 11,
      "text": "Solve for A."
    },
    {
      "step": 12,
      "text": "Substitute γ back into the equations to obtain the Lorentz tranformation."
    },
    {
      "step": 13,
      "text": "Time dilation: time intervals are longer in the moving frame."
    },
    {
      "step": 14,
      "text": "Length contraction: spatial intervals are shorter in the moving frame."
    },
    {
      "step": 15,
      "text": "Redefine force as the rate of change of relativistic momentum."
    },
    {
      "step": 16,
      "text": "Define relativistic momentum to preserve conservation laws."
    },
    {
      "step": 17,
      "text": "Calculate work done to accelerate a particle, leading to relativistic energy."
    },
    {
      "step": 18,
      "text": "Rewrite the work integral using the relation between force and momentum."
    },
    {
      "step": 19,
      "text": "Substitute the relativistic momentum `vec p = gamma*m*vec v` into the integral."
    },
    {
      "step": 20,
      "text": "Apply the product rule to expand `d(gamma*vec v)`."
    },
    {
      "step": 21,
      "text": "Distribute the dot product and separate the integral terms."
    },
    {
      "step": 22,
      "text": "Calculate the differential of the Lorentz factor `gamma` with respect to velocity."
    },
    {
      "step": 23,
      "text": "Substitute the expression for `d gamma` into the integral."
    },
    {
      "step": 24,
      "text": "Factor out common terms from the integrand, including `gamma`."
    },
    {
      "step": 25,
      "text": "Show that `v^2*gamma^2/c^2 + 1 = gamma^2` using the definition of the Lorentz factor."
    },
    {
      "step": 26,
      "text": "Use the relation `d gamma = (gamma^3*v*dv)/c^2` to transform the integral to `int d gamma`."
    },
    {
      "step": 27,
      "text": "Evaluate the integral from `gamma = 1` (at `v=0`) to `gamma` to get kinetic energy."
    },
    {
      "step": 28,
      "text": "Add the rest energy `E_0 = m*c^2` to the kinetic energy `E_k` to get the total energy."
    },
    {
      "step": 29,
      "text": "Final relativistic energy formula `E = gamma*m*c^2`."
    },
    {
      "step": 30,
      "text": "Identify rest energy when velocity is zero."
    },
    {
      "step": 31,
      "text": "State the relativistic energy and momentum expressions to derive their relationship."
    },
    {
      "step": 32,
      "text": "Square the energy expression."
    },
    {
      "step": 33,
      "text": "Square the momentum expression multiplied by `c`."
    },
    {
      "step": 34,
      "text": "Calculate `E^2 - (pc)^2` by subtracting the squared expressions."
    },
    {
      "step": 35,
      "text": "Factor out common terms from the difference."
    },
    {
      "step": 36,
      "text": "Use the definition of the Lorentz factor to simplify `gamma^2*(c^2 - v^2)`."
    },
    {
      "step": 37,
      "text": "Arrive at the fundamental energy-momentum-mass relation."
    }
  ],
  "programmatic_verification": {
    "language": "python 3.11.12",
    "library": "sympy 1.12.0",
    "code": [
      "import sympy as sp",
      "# step1: define symbols and general linear map",
      "A, B, D, E, v, c, x, t = sp.symbols('A B D E v c x t', real=True)",
      "x_p = A*x + B*t",
      "t_p = D*x + E*t",
      "# step2 & step3: origin world-line x = v*t ⇒ x' = 0 ⇒ solve for B",
      "eq_origin = sp.Eq(x_p.subs(x, v*t), 0)",
      "B_sol = sp.solve(eq_origin, B)[0]",
      "# step4 & step5: light-speed invariance for x = ±c*t ⇒ x' = ±c*t'",
      "eq_plus  = sp.Eq(x_p.subs({x: c*t, B: B_sol}),  c * t_p.subs({x: c*t, B: B_sol}))",
      "eq_minus = sp.Eq(x_p.subs({x: -c*t, B: B_sol}), -c * t_p.subs({x: -c*t, B: B_sol}))",
      "sol_DE = sp.solve([eq_plus, eq_minus], (D, E))",
      "D_sol, E_sol = sol_DE[D], sol_DE[E]",
      "# step8: substitute B, D, E back into x', t'",
      "x_p2 = x_p.subs({B: B_sol, D: D_sol, E: E_sol})",
      "t_p2 = t_p.subs({B: B_sol, D: D_sol, E: E_sol})",
      "# step9: compute spacetime interval",
      "interval_expr = x_p2**2 - c**2*t_p2**2",
      "# factor out (x**2 - c**2*t**2)",
      "factorized = sp.factor(interval_expr / (x**2 - c**2*t**2))",
      "# step10 & step11: enforce invariance ⇒ factorized = 1 ⇒ solve for A",
      "A_solutions = sp.solve(sp.Eq(factorized, 1), A)",
      "A_sol = A_solutions[0]  # choose the positive root",
      "# step12: define γ and final transforms",
      "gamma = A_sol",
      "x_final = sp.simplify(x_p2.subs(A, A_sol))",
      "t_final = sp.simplify(t_p2.subs(A, A_sol))",
      "# Verification: compare with expected form",
      "x_expected = gamma*(x - v*t)",
      "t_expected = gamma*(t - v*x/c**2)",
      "dx_diff = sp.simplify(x_final - x_expected)",
      "dt_diff = sp.simplify(t_final - t_expected)",
      "# Ensure it gives 0",
      "assert dt_diff == 0 and dx_diff == 0",
      "",
      "# Steps 15-16: Relativistic force and momentum definitions",
      "m, E, p = sp.symbols('m E p', positive=True, real=True)",
      "gamma_def = 1/sp.sqrt(1 - v**2/c**2)",
      "p_rel = gamma_def*m*v  # Step 16: relativistic momentum",
      "",
      "# Step 22: Verify d(gamma)/dv calculation",
      "gamma_expr = 1/sp.sqrt(1 - v**2/c**2)",
      "dgamma_dv = sp.diff(gamma_expr, v)",
      "expected_dgamma = (v/c**2) * gamma_expr**3",
      "dgamma_simplified = sp.simplify(dgamma_dv - expected_dgamma)",
      "assert dgamma_simplified == 0, 'Step 22: d(gamma)/dv calculation verification failed'",
      "",
      "# Step 25: Verify gamma^2 identity",
      "identity_lhs = v**2*gamma_expr**2/c**2 + 1",
      "identity_rhs = gamma_expr**2",
      "identity_check = sp.simplify(identity_lhs - identity_rhs)",
      "assert identity_check == 0, 'Step 25: gamma^2 identity verification failed'",
      "",
      "# Step 26: Verify integral transformation using d(gamma) = (gamma^3*v*dv)/c^2",
      "# This verifies that d(gamma) = (gamma^3*v*dv)/c^2, so (v/c^2)*dv = d(gamma)/gamma^3",
      "dgamma_expected = (gamma_expr**3*v/c**2)",
      "dgamma_actual = dgamma_dv",
      "substitution_check = sp.simplify(dgamma_expected - dgamma_actual)",
      "assert substitution_check == 0, 'Step 26: d(gamma) relation verification failed'",
      "",
      "# Step 36: Verify gamma^2*(c^2 - v^2) = c^2",
      "gamma_identity_expr = gamma_expr**2*(c**2 - v**2)",
      "gamma_identity_simplified = sp.simplify(gamma_identity_expr)",
      "assert sp.simplify(gamma_identity_simplified - c**2) == 0, 'Step 36: gamma identity verification failed'",
      "",
      "# Steps 29-37: Energy-momentum relation derivation",
      "E_rel = gamma_def*m*c**2  # Step 29: relativistic energy",
      "p_rel = gamma_def*m*v     # Step 16: relativistic momentum",
      "",
      "# Steps 32-33: Square energy and momentum expressions",
      "E_squared = E_rel**2",
      "pc_squared = (p_rel*c)**2",
      "",
      "# Steps 34-37: Derive E² - (pc)² = (mc²)²",
      "energy_momentum_relation = E_squared - pc_squared",
      "expected_mass_energy = (m*c**2)**2",
      "relation_simplified = sp.simplify(energy_momentum_relation)",
      "mass_energy_simplified = sp.simplify(expected_mass_energy)",
      "assert sp.simplify(relation_simplified - mass_energy_simplified) == 0, 'Energy-momentum relation verification failed'",
      "",
      "# Test specific cases",
      "# Case 1: v = 0 (rest frame)",
      "E_rest = E_rel.subs(v, 0)",
      "p_rest = p_rel.subs(v, 0)",
      "gamma_rest = gamma_def.subs(v, 0)",
      "",
      "assert E_rest == m*c**2  # Rest energy",
      "assert p_rest == 0       # Zero momentum at rest",
      "assert gamma_rest == 1   # Lorentz factor is 1 at rest",
      "",
      "# Case 2: Test time dilation factor",
      "# For v = 0.6c, γ should be 1.25",
      "v_test = sp.Rational(3,5)*c  # 0.6c",
      "gamma_test = gamma_def.subs(v, v_test)",
      "gamma_expected = sp.Rational(5,4)  # 1.25",
      "",
      "assert sp.simplify(gamma_test - gamma_expected) == 0"
    ]
  },
  "domain": "gr-qc",
  "theory_status": "current",
  "validity_regime": {
    "conditions": [
      "Inertial reference frames (no acceleration)",
      "Flat spacetime (negligible gravitational effects)",
      "Velocities comparable to speed of light",
      "Well-defined rest masses"
    ],
    "limitations": [
      "Does not account for gravitational effects",
      "Limited to inertial frames",
      "Superseded by general relativity in curved spacetime"
    ]
  },
  "superseded_by": [
    "einstein_field_equations"
  ],
  "historical_context": {
    "importance": "Revolutionary unification of space, time, mass, and energy",
    "development_period": "1905",
    "key_insights": [
      "Spacetime unity",
      "Relativity of simultaneity",
      "Mass-energy equivalence",
      "Universal speed limit"
    ]
  },
  "references": [
    {
      "id": "R1",
      "citation": "Einstein, A. (1905). 'Zur Elektrodynamik bewegter Körper.' Annalen der Physik, 17, 891-921."
    },
    {
      "id": "R2",
      "citation": "Rindler, W. (1991). Introduction to Special Relativity (2nd ed.). Oxford University Press."
    }
  ],
  "review_status": "reviewed",
  "contributors": [
    {
      "full_name": "Manuel Sánchez Hernández",
      "identifier": "ORCID 0009-0006-4904-3695"
    }
  ]
}