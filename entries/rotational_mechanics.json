{
  "result_id": "rotational_mechanics",
  "result_name": "Rotational Mechanics",
  "result_equations": [
    {
      "id": "angular_velocity",
      "equation": "omega = v/r = 2*pi/T = 2*pi*f"
    },
    {
      "id": "torque_force",
      "equation": "vec tau = vec r times vec F"
    },
    {
      "id": "torque_moment_inertia",
      "equation": "tau = I*alpha"
    },
    {
      "id": "angular_momentum",
      "equation": "vec L = I*vec omega = vec r times vec p"
    },
    {
      "id": "rotational_kinetic_energy",
      "equation": "K_rot = (1/2)*I*omega^2"
    },
    {
      "id": "angular_acceleration",
      "equation": "alpha = d*omega/dt = d^2*theta/dt^2"
    }
  ],
  "explanation": "Rotational mechanics describes the motion of objects rotating about an axis, providing the rotational analogs of linear motion concepts. Angular velocity relates rotational speed to period and frequency, while torque is the rotational equivalent of force, causing angular acceleration through the moment of inertia. These concepts unified with angular momentum and rotational kinetic energy form a complete framework for analyzing spinning objects, from wheels to planets.",
  "definitions": [
    {
      "symbol": "omega",
      "definition": "Angular velocity (rate of change of angular position)."
    },
    {
      "symbol": "v",
      "definition": "Linear velocity at distance r from rotation axis."
    },
    {
      "symbol": "r",
      "definition": "Distance from rotation axis."
    },
    {
      "symbol": "T",
      "definition": "Period of rotation (time for one complete revolution)."
    },
    {
      "symbol": "f",
      "definition": "Frequency of rotation (revolutions per unit time)."
    },
    {
      "symbol": "vec tau",
      "definition": "Torque vector (rotational force)."
    },
    {
      "symbol": "vec F",
      "definition": "Applied force vector."
    },
    {
      "symbol": "I",
      "definition": "Moment of inertia (rotational inertia)."
    },
    {
      "symbol": "alpha",
      "definition": "Angular acceleration."
    },
    {
      "symbol": "vec L",
      "definition": "Angular momentum vector."
    },
    {
      "symbol": "vec p",
      "definition": "Linear momentum vector."
    },
    {
      "symbol": "K_rot",
      "definition": "Rotational kinetic energy."
    },
    {
      "symbol": "theta",
      "definition": "Angular position."
    }
  ],
  "assumptions": [
    {
      "id": "assumption1",
      "text": "Rigid body rotation (no deformation during rotation)."
    },
    {
      "id": "assumption2",
      "text": "Fixed axis of rotation."
    },
    {
      "id": "assumption3",
      "text": "Classical mechanics applies (non-relativistic)."
    },
    {
      "id": "assumption4",
      "text": "Moment of inertia is constant for rigid bodies."
    },
    {
      "id": "assumption5",
      "text": "Rigid body assumption (distances between particles remain constant)."
    },
    {
      "id": "assumption6",
      "text": "Fixed axis of rotation perpendicular to motion plane."
    },
    {
      "id": "assumption7",
      "text": "All particles have the same angular velocity ω."
    },
    {
      "id": "assumption8",
      "text": "Classical mechanics and Newtonian physics apply."
    }
  ],
  "derivation": [
    {
      "step": 1,
      "description": "Establish the relationship between angular and linear motion.",
      "equation": "text(Angular velocity from linear motion)"
    },
    {
      "step": 2,
      "description": "Derive angular velocity from the arc length-angle relationship.",
      "equation": "s = r*theta => v = ds/dt = r*d*theta/dt = r*omega"
    },
    {
      "step": 3,
      "description": "Connect angular velocity to measurable quantities like period and frequency.",
      "equation": "text(Period-frequency relation)"
    },
    {
      "step": 4,
      "description": "Express angular velocity in terms of period T and frequency f.",
      "equation": "omega = 2*pi/T = 2*pi*f"
    },
    {
      "step": 5,
      "description": "Define torque as the rotational effect of force.",
      "equation": "text(Torque from force and lever arm)"
    },
    {
      "step": 6,
      "description": "Express torque as the cross product of position and force vectors.",
      "equation": "tau = r*F*sin(phi) => vec tau = vec r times vec F"
    },
    {
      "step": 7,
      "description": "Establish the rotational analog of Newton's second law.",
      "equation": "text(Newton's second law for rotation)"
    },
    {
      "step": 8,
      "description": "Relate torque to angular acceleration through moment of inertia.",
      "equation": "tau = I*alpha"
    },
    {
      "step": 9,
      "description": "Define angular momentum as the rotational analog of linear momentum.",
      "equation": "text(Angular momentum definition)"
    },
    {
      "step": 10,
      "description": "Derive angular momentum in terms of moment of inertia and angular velocity.",
      "equation": "vec L = vec r times vec p = vec r times (m*vec v) = m*r^2*omega = I*omega"
    },
    {
      "step": 11,
      "description": "Establish rotational kinetic energy by analogy with linear kinetic energy.",
      "equation": "text(Rotational kinetic energy)"
    },
    {
      "step": 12,
      "description": "Derive the rotational kinetic energy formula for rigid bodies.",
      "equation": "K_rot = (1/2)*sum(m_i*v_i^2) = (1/2)*sum(m_i*r_i^2*omega^2) = (1/2)*I*omega^2"
    }
  ],
  "programmatic_verification": {
    "language": "python 3.11.12",
    "library": "sympy 1.12.0",
    "code": [
      "import sympy as sp",
      "import math",
      "",
      "# Define symbols",
      "omega, v, r, T, f, tau, F, I, alpha, L, theta, t = sp.symbols('omega v r T f tau F I alpha L theta t', real=True, positive=True)",
      "K_rot = sp.symbols('K_rot', real=True, positive=True)",
      "",
      "# Test angular velocity relationships",
      "# ω = v/r, so v = ωr",
      "# This is definitionally true, test with numerical values instead",
      "",
      "# ω = 2π/T = 2πf",
      "omega_from_period = 2*sp.pi/T",
      "omega_from_freq = 2*sp.pi*f",
      "# Verify consistency: if f = 1/T, then ω = 2πf should equal ω = 2π/T",
      "# This is automatically satisfied by the definitions",
      "",
      "# Test rotational Newton's 2nd law: τ = Iα",
      "# These are definitional relationships, test with numerical values",
      "",
      "# Test rotational kinetic energy: K_rot = (1/2)Iω²",
      "K_rot_eq = sp.Rational(1,2) * I * omega**2",
      "",
      "# Numerical verification with realistic values",
      "# Example: solid cylinder rotating",
      "mass = 2.0      # kg",
      "radius = 0.5    # m",
      "I_cylinder = mass * radius**2 / 2  # moment of inertia for solid cylinder",
      "omega_val = 10.0  # rad/s",
      "",
      "# Calculate rotational kinetic energy",
      "K_rot_val = 0.5 * I_cylinder * omega_val**2",
      "expected_K = 0.5 * (mass * radius**2 / 2) * omega_val**2",
      "assert abs(K_rot_val - expected_K) < 1e-10",
      "",
      "# Test angular-linear velocity relationship",
      "v_tangential = omega_val * radius",
      "expected_v = 5.0  # m/s",
      "assert abs(v_tangential - expected_v) < 1e-10",
      "",
      "# Test period-frequency relationships",
      "period_val = 2 * math.pi / omega_val",
      "freq_val = 1 / period_val",
      "omega_check = 2 * math.pi * freq_val",
      "assert abs(omega_check - omega_val) < 1e-10",
      "",
      "# Test torque calculation",
      "force_val = 20.0    # N",
      "lever_arm = 0.3     # m",
      "torque_val = force_val * lever_arm",
      "alpha_val = torque_val / I_cylinder",
      "",
      "# Verify τ = Iα",
      "torque_check = I_cylinder * alpha_val",
      "assert abs(torque_check - torque_val) < 1e-10",
      "",
      "# Test angular momentum",
      "L_val = I_cylinder * omega_val",
      "# L should also equal r × p for point masses",
      "# For our cylinder, this is a more complex integral, but the formula holds"
    ]
  },
  "domain": "physics.class-ph",
  "theory_status": "current",
  "validity_regime": {
    "conditions": [
      "Rigid body motion",
      "Fixed axis of rotation",
      "Classical mechanics (non-relativistic)",
      "Constant moment of inertia"
    ],
    "limitations": [
      "Breaks down for deformable bodies",
      "Fixed axis assumption may not hold",
      "Relativistic corrections needed at high speeds",
      "Gyroscopic effects in 3D rotation"
    ]
  },
  "historical_context": {
    "importance": "Essential for understanding rotating machinery, planetary motion, and spinning objects; foundation for angular momentum conservation",
    "development_period": "17th-18th centuries",
    "key_insights": [
      "Euler developed the mathematical framework for rigid body rotation",
      "Lagrange extended the formalism with generalized coordinates",
      "Conservation of angular momentum discovered as rotational analog",
      "Industrial revolution drove practical applications in machinery"
    ]
  },
  "references": [
    {
      "id": "R1",
      "citation": "Goldstein, H., Poole, C., & Safko, J. (2002). *Classical Mechanics* (3rd ed.). Addison-Wesley."
    },
    {
      "id": "R2",
      "citation": "Taylor, J. R. (2005). *Classical Mechanics*. University Science Books."
    }
  ],
  "dependencies": [
    "newtons_laws_of_motion",
    "angular_momentum",
    "conservation_of_angular_momentum"
  ],
  "contributors": [
    {
      "full_name": "Synthetic entry",
      "identifier": "AI created. May have mistakes, looking for contributors to this entry."
    }
  ],
  "review_status": "draft"
}