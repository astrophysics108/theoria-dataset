{
  "result_id": "doppler_effect",
  "result_name": "Doppler Effect",
  "result_equations": [
    {
      "id": "doppler_general",
      "equation": "f' = f \\frac{v \\pm v_r}{v \\pm v_s}"
    },
    {
      "id": "doppler_approaching",
      "equation": "f' = f \\frac{v + v_r}{v - v_s}"
    },
    {
      "id": "doppler_receding",
      "equation": "f' = f \\frac{v - v_r}{v + v_s}"
    },
    {
      "id": "doppler_relativistic",
      "equation": "f' = f \\sqrt{\\frac{1 - \\beta}{1 + \\beta}} \\text{ for radial motion}"
    }
  ],
  "explanation": "The Doppler effect describes the change in frequency of a wave when there is relative motion between the source and observer. The observed frequency increases when source and observer approach each other and decreases when they move apart.",
  "equations_assumptions": [
    {
      "id": "assump1",
      "text": "Classical mechanics (non-relativistic)"
    },
    {
      "id": "assump2",
      "text": "Homogeneous medium"
    },
    {
      "id": "assump3",
      "text": "Straight-line motion"
    },
    {
      "id": "assump4",
      "text": "Constant velocities"
    }
  ],
  "definitions": [
    {
      "symbol": "f'",
      "definition": "Observed frequency"
    },
    {
      "symbol": "f",
      "definition": "Source frequency"
    },
    {
      "symbol": "v",
      "definition": "Wave speed in medium"
    },
    {
      "symbol": "v_r",
      "definition": "Receiver (observer) velocity"
    },
    {
      "symbol": "v_s",
      "definition": "Source velocity"
    },
    {
      "symbol": "β",
      "definition": "v/c (for relativistic case)"
    },
    {
      "symbol": "c",
      "definition": "Speed of light"
    }
  ],
  "derivation": [
    {
      "step": 1,
      "equation": "\\lambda = \\frac{v}{f}"
    },
    {
      "step": 2,
      "equation": "\\lambda' = \\lambda \\pm \\frac{v_s T}{1} = \\lambda \\left(1 \\pm \\frac{v_s}{v}\\right)"
    },
    {
      "step": 3,
      "equation": "f'_{source} = \\frac{v}{\\lambda'} = \\frac{f}{1 \\pm v_s/v}"
    },
    {
      "step": 4,
      "equation": "f'_{observer} = f'_{source} \\left(1 \\pm \\frac{v_r}{v}\\right)"
    },
    {
      "step": 5,
      "equation": "f' = f \\frac{1 \\pm v_r/v}{1 \\pm v_s/v} = f \\frac{v \\pm v_r}{v \\pm v_s}"
    }
  ],
  "derivation_assumptions": [
    {
      "id": "deriv_assump1",
      "text": "Small velocities compared to wave speed"
    },
    {
      "id": "deriv_assump2",
      "text": "Source and observer move along line connecting them"
    },
    {
      "id": "deriv_assump3",
      "text": "Medium at rest"
    },
    {
      "id": "deriv_assump4",
      "text": "Wave propagation is isotropic"
    }
  ],
  "derivation_explanation": [
    {
      "step": 1,
      "text": "The Doppler effect is derived by considering how the wavelength changes due to source motion, then how the observed frequency changes due to observer motion. The effects combine to give the general formula."
    }
  ],
  "programmatic_verification": {
    "language": "python 3.11.12",
    "library": "sympy 1.12.0",
    "code": [
      "import math",
      "print('Doppler Effect Verification\\n')",
      "print('=' * 40)",
      "# Test 1: Classical Doppler effect verification",
      "def verify_classical_doppler():",
      "    \"\"\"Verify classical Doppler formulas\"\"\"",
      "    print('Test 1: Classical Doppler effect')",
      "    ",
      "    # Wave parameters",
      "    f_source = 1000  # Hz (source frequency)",
      "    v_wave = 343     # m/s (speed of sound in air)",
      "    ",
      "    # Test approaching case",
      "    v_s = 34.3  # source velocity (10% of sound speed)",
      "    v_r = 0     # observer at rest",
      "    ",
      "    # Apply Doppler formula",
      "    f_observed = f_source * (v_wave + v_r) / (v_wave + v_s)",
      "    expected_frequency = f_source * v_wave / (v_wave + v_s)",
      "    ",
      "    print(f'  Source frequency: {f_source} Hz')",
      "    print(f'  Source approaching at: {v_s} m/s')",
      "    print(f'  Observed frequency: {f_observed:.1f} Hz')",
      "    print(f'  Expected: {expected_frequency:.1f} Hz')",
      "    print(f'  Formula verified: {math.isclose(f_observed, expected_frequency)}')",
      "    ",
      "    return math.isclose(f_observed, expected_frequency)",
      "# Test 2: Radar Doppler (double shift)",
      "def verify_radar_doppler():",
      "    \"\"\"Verify radar Doppler effect\"\"\"",
      "    print('\\nTest 2: Radar Doppler effect')",
      "    ",
      "    # Radar parameters",
      "    f_radar = 10e9   # 10 GHz",
      "    c = 3e8          # speed of light",
      "    v_target = 30    # target velocity (m/s)",
      "    ",
      "    # Double Doppler shift formula: f' ≈ f(1 + 2v/c)",
      "    f_received = f_radar * (1 + 2*v_target/c)",
      "    delta_f = f_received - f_radar",
      "    ",
      "    print(f'  Radar frequency: {f_radar/1e9:.1f} GHz')",
      "    print(f'  Target velocity: {v_target} m/s')",
      "    print(f'  Frequency shift: {delta_f:.3f} Hz')",
      "    print(f'  Relative shift: {delta_f/f_radar:.2e}')",
      "    print(f'  Non-zero shift: {delta_f > 0}')",
      "    ",
      "    return delta_f > 0",
      "# Test 3: Reciprocity test",
      "def verify_reciprocity():",
      "    \"\"\"Verify that source and observer motion give different results\"\"\"",
      "    print('\\nTest 3: Reciprocity test')",
      "    ",
      "    f_source = 1000  # Hz",
      "    v_wave = 343     # m/s",
      "    v = 34.3         # velocity",
      "    ",
      "    # Source moving toward observer",
      "    f_source_moving = f_source * v_wave / (v_wave - v)",
      "    ",
      "    # Observer moving toward source",
      "    f_observer_moving = f_source * (v_wave + v) / v_wave",
      "    ",
      "    print(f'  Source moving: {f_source_moving:.1f} Hz')",
      "    print(f'  Observer moving: {f_observer_moving:.1f} Hz')",
      "    print(f'  Different results: {not math.isclose(f_source_moving, f_observer_moving)}')",
      "    ",
      "    return not math.isclose(f_source_moving, f_observer_moving)",
      "# Run tests",
      "test1 = verify_classical_doppler()",
      "test2 = verify_radar_doppler()",
      "test3 = verify_reciprocity()",
      "print('\\nSummary:')",
      "print(f'Classical Doppler formula: {test1}')",
      "print(f'Radar Doppler effect: {test2}')",
      "print(f'Reciprocity verified: {test3}')",
      "print(f'All tests passed: {all([test1, test2, test3])}')",
      "print('\\nDoppler effect verified!')"
    ]
  },
  "domain": "physics.class-ph",
  "theory_status": "current",
  "validity_regime": {
    "conditions": [
      "Classical mechanics for low velocities",
      "Uniform medium",
      "Constant velocities",
      "Linear wave propagation"
    ],
    "limitations": [
      "Relativistic effects at high speeds",
      "Medium motion affects results",
      "Transverse Doppler effect",
      "Nonlinear propagation effects"
    ]
  },
  "historical_context": {
    "development_period": "1842",
    "importance": "Fundamental wave phenomenon; enables velocity measurements and astronomical discoveries including cosmic expansion",
    "key_insights": [
      "Christian Doppler first described the effect for sound and light waves",
      "Hippolyte Fizeau independently proposed the effect for electromagnetic waves",
      "First experimental verification came from acoustic measurements of railway trains"
    ]
  },
  "references": [
    {
      "id": "ref1",
      "citation": "French, A. P. (1971). Vibrations and Waves. CRC Press."
    },
    {
      "id": "ref2",
      "citation": "Resnick, R., Eisberg, R., & Walker, J. (2013). Fundamentals of Physics. Wiley."
    }
  ],
  "dependencies": [
    "wave_equation",
    "waves_interference"
  ],
  "created_by": "theory_classification_system",
  "review_status": "draft"
}