{
  "result_name": "Euler-Lagrange Equation",
  "result_equations": [
    { "id": "eq1", "equation": "d/dt(del L/del dot q_i) - del L/del q_i = 0" }
  ],
  "explanation": "The Euler-Lagrange equation provides the equations of motion for a system from its Lagrangian. It states that the physical trajectory makes the action stationary, generalizing Newton's laws to generalized coordinates. This equation is fundamental in analytical mechanics and the calculus of variations.",
  "equations_assumptions": [
    {
      "id": "eq_assump1",
      "text": "The configuration is described by generalized coordinates `q_i` and Lagrangian `L(q_i, dot q_i, t)` is differentiable."
    },
    {
      "id": "eq_assump2",
      "text": "Variations of coordinates at the boundary times are zero (`delta q_i(t1) = delta q_i(t2) = 0`)."
    }
  ],
  "definitions": [
    {
      "symbol": "q_i",
      "definition": "Generalized coordinate i (i = 1,...,N)."
    },
    {
      "symbol": "dot q_i",
      "definition": "Generalized velocity (time derivative of `q_i`)."
    },
    {
      "symbol": "L",
      "definition": "Lagrangian (kinetic energy minus potential energy) of the system."
    }
  ],
  "derivation": [
    { "step": 1, "equation": "S = int_(t1)^(t2) L(q_i, dot q_i, t) dt" },
    {
      "step": 2,
      "equation": "delta S = int_(t1)^(t2) [del L/del q_i delta q_i + del L/del dot q_i delta dot q_i] dt"
    },
    {
      "step": 3,
      "equation": "delta S = [del L/del dot q_i delta q_i]_(t1)^(t2) + int_(t1)^(t2) [del L/del q_i - d/dt(del L/del dot q_i)] delta q_i dt"
    },
    { "step": 4, "equation": "d/dt(del L/del dot q_i) - del L/del q_i = 0" }
  ],
  "derivation_assumptions": [
    {
      "id": "assump1",
      "text": "Fixed endpoints: `delta q_i(t1) = delta q_i(t2) = 0`, so the boundary term vanishes in step 3."
    },
    {
      "id": "assump2",
      "text": "The functions are sufficiently smooth to perform integration by parts."
    }
  ],
  "derivation_explanation": [
    {
      "step": 1,
      "text": "Define the action `S` as the time integral of the Lagrangian from `t1` to `t2`. The physical path makes `S` stationary."
    },
    {
      "step": 2,
      "text": "Express the first-order variation `delta S` by varying the integrand. Use the chain rule on `L(q_i, dot q_i, t)`."
    },
    {
      "step": 3,
      "text": "Integrate the `delta dot q_i` term by parts. The boundary term vanishes due to fixed endpoint variations, yielding an integral proportional to `delta q_i`."
    },
    {
      "step": 4,
      "text": "Since the variations `delta q_i(t)` are arbitrary, the integrand must vanish, giving the Euler-Lagrange equation."
    }
  ],
  "programmatic_verification": {
    "language": "python 3.11.12",
    "library": "sympy 1.12.0",
    "code": [
      "import sympy as sp",
      "# Step 1: define a simple Lagrangian (harmonic oscillator)",
      "t = sp.symbols('t', real=True)",
      "m, k = sp.symbols('m k', positive=True)",
      "x = sp.Function('x')",
      "L = m*sp.diff(x(t), t)**2/2 - k*x(t)**2/2",
      "# Step 2: form the Euler-Lagrange expression",
      "EL_expr = sp.diff(sp.diff(L, sp.diff(x(t), t)), t) - sp.diff(L, x(t))",
      "# Step 3: substitute a known solution x(t) = cos(sqrt(k/m)*t)",
      "x_trial = sp.cos(sp.sqrt(k/m)*t)",
      "EL_test = EL_expr.subs({x(t): x_trial, sp.diff(x(t), t): sp.diff(x_trial, t), sp.diff(x(t), t, 2): sp.diff(x_trial, t, 2)})",
      "# Step 4: verify the Euler-Lagrange equation is satisfied",
      "assert sp.simplify(EL_test) == 0"
    ]
  },
  "domain": "physics.class-ph",
  "references": [
    {
      "id": "R1",
      "citation": "Landau, L. D., & Lifshitz, E. M. (1976). *Mechanics* (3rd ed.). Butterworth-Heinemann."
    },
    {
      "id": "R2",
      "citation": "Goldstein, H. (1980). *Classical Mechanics* (2nd ed.). Addison-Wesley."
    }
  ],
  "created_by": "Synthetic entry, created with AI, may have mistakes. Looking for contributors to review all fields",
  "review_status": "draft"
}
